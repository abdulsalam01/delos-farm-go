// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0

package db

import (
	"context"
	"database/sql"
)

type DBTX interface {
	ExecContext(context.Context, string, ...interface{}) (sql.Result, error)
	PrepareContext(context.Context, string) (*sql.Stmt, error)
	QueryContext(context.Context, string, ...interface{}) (*sql.Rows, error)
	QueryRowContext(context.Context, string, ...interface{}) *sql.Row
}

func New(db DBTX) (error) {
	ctx := context.Background()
	q := &Queries{db: db}

	if err := q.InitFarmTable(ctx); err != nil {
		return err
	}
	if err := q.InitPondTable(ctx); err != nil {
		return err
	}
	if err := q.Index(ctx); err != nil {
		return err
	}
	
	return nil
}

type Queries struct {
	db DBTX
}

func (q *Queries) WithTx(tx *sql.Tx) *Queries {
	return &Queries{
		db: tx,
	}
}
